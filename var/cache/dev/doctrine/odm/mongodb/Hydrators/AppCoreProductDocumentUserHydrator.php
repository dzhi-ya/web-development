<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Hydrator\HydratorException;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\Query\Query;
use Doctrine\ODM\MongoDB\UnitOfWork;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class AppCoreProductDocumentUserHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate(object $document, array $data, array $hints = array()): array
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id']) || (! empty($this->class->fieldMappings['id']['nullable']) && array_key_exists('_id', $data))) {
            $value = $data['_id'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['id']['type'];
                $return = $value instanceof \MongoDB\BSON\ObjectId ? (string) $value : $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['name']) || (! empty($this->class->fieldMappings['name']['nullable']) && array_key_exists('name', $data))) {
            $value = $data['name'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['name']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['name']->setValue($document, $return);
            $hydratedData['name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['first_name']) || (! empty($this->class->fieldMappings['first_name']['nullable']) && array_key_exists('first_name', $data))) {
            $value = $data['first_name'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['first_name']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['first_name']->setValue($document, $return);
            $hydratedData['first_name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['last_name']) || (! empty($this->class->fieldMappings['last_name']['nullable']) && array_key_exists('last_name', $data))) {
            $value = $data['last_name'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['last_name']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['last_name']->setValue($document, $return);
            $hydratedData['last_name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['email']) || (! empty($this->class->fieldMappings['email']['nullable']) && array_key_exists('email', $data))) {
            $value = $data['email'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['email']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['email']->setValue($document, $return);
            $hydratedData['email'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['birthdate']) || (! empty($this->class->fieldMappings['birthdate']['nullable']) && array_key_exists('birthdate', $data))) {
            $value = $data['birthdate'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['birthdate']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['birthdate']->setValue($document, $return);
            $hydratedData['birthdate'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['rating']) || (! empty($this->class->fieldMappings['rating']['nullable']) && array_key_exists('rating', $data))) {
            $value = $data['rating'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['rating']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['rating']->setValue($document, $return);
            $hydratedData['rating'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['age']) || (! empty($this->class->fieldMappings['age']['nullable']) && array_key_exists('age', $data))) {
            $value = $data['age'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['age']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['age']->setValue($document, $return);
            $hydratedData['age'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['city_id']) || (! empty($this->class->fieldMappings['city_id']['nullable']) && array_key_exists('city_id', $data))) {
            $value = $data['city_id'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['city_id']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['city_id']->setValue($document, $return);
            $hydratedData['city_id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['reg_date']) || (! empty($this->class->fieldMappings['reg_date']['nullable']) && array_key_exists('reg_date', $data))) {
            $value = $data['reg_date'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['reg_date']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['reg_date']->setValue($document, $return);
            $hydratedData['reg_date'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['phone']) || (! empty($this->class->fieldMappings['phone']['nullable']) && array_key_exists('phone', $data))) {
            $value = $data['phone'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['phone']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['phone']->setValue($document, $return);
            $hydratedData['phone'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['roles']) || (! empty($this->class->fieldMappings['roles']['nullable']) && array_key_exists('roles', $data))) {
            $value = $data['roles'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['roles']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['roles']->setValue($document, $return);
            $hydratedData['roles'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['createdAt'])) {
            $value = $data['createdAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['createdAt']->setValue($document, clone $return);
            $hydratedData['createdAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['updatedAt'])) {
            $value = $data['updatedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['updatedAt']->setValue($document, clone $return);
            $hydratedData['updatedAt'] = $return;
        }
        return $hydratedData;
    }
}